{"version":3,"sources":["webpack:///./src/templates/BlogList.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/index.tsx","webpack:///./src/assets/images/favicon.ico","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["BlogList","data","pageContext","_edges","allMarkdownRemark","edges","currentPage","numPages","YearDateArr","map","edge","node","frontmatter","date","split","displayEdges","Array","from","Set","_year","filter","_paginationNode","length","item","i","_key","_index","_selected","_isDot","currentTime","Date","getTime","className","styles","main","catalog","key","year","link","_dateArr","_MonthDay","pageTime","isNewPage","id","to","fields","slug","title","newcontent","pagination","paginationItem","itemSelected","BlogListQuery","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","DefaultLayout","children","layout","site","siteMetadata","rel","type","href","favicon","sizes","header","menu","footer","contact","target","siteInfo","createHTML","url","this","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase"],"mappings":"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","file":"component---src-templates-blog-list-tsx-e296d1f41e58c4d348b4.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\n\nimport styles from './styles/list.module.scss'\n\nimport {\n  IBlogLIstProps\n} from '../interfaces'\n\ninterface IPaginationNode  {\n  _key: string,\n  _index: number,\n  _selected: boolean,\n  _isDot: boolean\n}\n\nconst BlogList: React.FC<IBlogLIstProps> = ({ data, pageContext }) => {\n  // 数据源\n  const _edges = data.allMarkdownRemark.edges\n  const {\n    currentPage,\n    numPages\n  } = pageContext\n  // 取日期\n  const YearDateArr = _edges.map(edge => edge.node.frontmatter.date.split('-')[0])\n  const uniqueDateArr = Array.from(new Set(YearDateArr))\n  const displayEdges = uniqueDateArr.map(_year => ({\n    _year: _year,\n    _edges: _edges.filter(edge => edge.node.frontmatter.date.split('-')[0] === _year)\n  }))\n  // 分页标志符\n  let _paginationNode = [] as IPaginationNode[]\n  if (numPages <= 6) {\n    _paginationNode = Array.from({length: numPages}, ((item, i) => ({\n      _key: `${i} + ${numPages}`,\n      _index: i + 1,\n      _selected: (i + 1) === currentPage,\n      _isDot: false\n    })))\n  } else {\n    if (1 <= currentPage && currentPage <= 3) {\n      _paginationNode = Array.from({length: 6}, ((item, i) => {\n        if (i <= 3) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: i + 1,\n            _selected: (i + 1) === currentPage,\n            _isDot: false\n          }\n        } else if (i === 5) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: numPages,\n            _selected: false,\n            _isDot: false\n          }\n        } else {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: i + 1,\n            _selected: false,\n            _isDot: true\n          }\n        }\n      }))\n    } else if (numPages - 2 <= currentPage && currentPage <= numPages) {\n      _paginationNode = Array.from({length: 6}, ((item, i) => {\n        if (2 <= i && i <= 5) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: numPages - (5 - i),\n            _selected: (5 - i) === (numPages - currentPage),\n            _isDot: false\n          }\n        } else if (i === 0) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: i + 1,\n            _selected: false,\n            _isDot: false\n          }\n        } else {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: i + 1,\n            _selected: false,\n            _isDot: true\n          }\n        }\n      }))\n    } else {\n      _paginationNode = Array.from({length: 7}, ((item, i) => {\n        if (i === 0) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: i + 1,\n            _selected: false,\n            _isDot: false\n          }\n        } else if (i === 6) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: numPages,\n            _selected: false,\n            _isDot: false\n          }\n        } else if (i === 1 || i === 5) {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: i + 1,\n            _selected: false,\n            _isDot: true\n          }\n        } else {\n          return {\n            _key: `${i} + ${numPages}`,\n            _index: currentPage + (i - 3),\n            _selected: i === 3,\n            _isDot: false\n          }\n        }\n      }))\n    }\n  }\n  // 当前时间\n  const currentTime = new Date().getTime()\n  return (\n    <Layout>\n      <div className={styles.main}>\n        <div className={styles.catalog}>\n          {displayEdges.map(item => (\n            <div key={item._year} className={styles.item}>\n              <div className={styles.year}>{item._year}</div>\n              <div\n                className={styles.link}\n              >{item._edges.map(({ node }) => {\n                // 解析 M/D 格式\n                const _dateArr = node.frontmatter.date.split('-')\n                const _MonthDay = `${_dateArr[1]}/${_dateArr[2]}`\n                // 解析是否是最新文章\n                const pageTime = new Date(node.frontmatter.date).getTime()\n                let isNewPage = false\n                if (pageTime < currentTime && pageTime > (currentTime - 1000 * 60 * 60 * 24 * 30)) { // 30 天以内\n                  isNewPage = true\n                }\n                return (\n                  <div key={node.id}>\n                    <Link\n                      to={node.fields.slug}\n                    >\n                      <span className={styles.date}>{_MonthDay}</span>\n                      {node.frontmatter.title}\n                    </Link>\n                    {\n                      isNewPage && <span className={styles.newcontent}>new</span>\n                    }\n                  </div>\n                )\n              })}\n              </div>\n            </div>\n          ))}\n        </div>\n        {_paginationNode.length !== 0 && (\n          <div className={styles.pagination}>\n            {_paginationNode.map(item => {\n              if (item._isDot) {\n                return (\n                  <span\n                    key={item._key}\n                    className={\n                      `${styles.paginationItem}`\n                    }\n                  >\n                    ...\n                  </span>\n                )\n              } else {\n                return (\n                    <Link\n                      key={item._key}\n                      to={`${item._index === 1 ? '/' : `/page/${item._index}`}`}\n                      className={\n                        `${styles.paginationItem} ${item._selected ? styles.itemSelected : ''}`\n                      }\n                    >\n                      {item._index}\n                    </Link>\n                )\n              }\n            })}\n          </div>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const BlogListQuery = graphql`\n  query BlogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {\n        fields: [frontmatter___date],\n        order: DESC\n      },\n      filter: {\n        frontmatter: {\n          tags: {\n            ne: \"_about\"\n          }\n        }\n      },\n      limit: $limit,\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n          }\n        }\n\t    }\n    }\n  }\n`\n\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport favicon from '../../assets/images/favicon.ico'\r\n\r\nimport '../../assets/style/global.css'\r\nimport '../../assets/style/style.css'\r\nimport 'prismjs/themes/prism-coy.css'\r\n\r\nimport styles from './layout.module.scss'\r\n\r\ninterface SiteMetaType {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n}\r\n\r\nconst DefaultLayout: React.FC = ({ children }) => {\r\n  const data: SiteMetaType = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className={styles.layout} >\r\n    {/* Helmet */}\r\n    <Helmet>\r\n      <title>{data.site.siteMetadata.title}</title>\r\n      <link rel='icon' type='image/png' href={favicon} sizes='16x16' />\r\n    </Helmet>\r\n    {/*Header*/}\r\n    <div className={styles.header}>\r\n      <div className={styles.title}>\r\n        {data.site.siteMetadata.title}\r\n      </div>\r\n      <div className={styles.menu}>\r\n        <Link to='/'>主页</Link>\r\n        <Link\r\n          to='/about'\r\n          title='I Love You a Thousands Times'\r\n        >\r\n          WHO AM I?\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    {/*正文内容*/}\r\n    {children}\r\n    {/* footer */}\r\n    <div className={styles.footer}>\r\n      <div className={styles.contact}>\r\n        <a\r\n          href='https://github.com/BetaMee'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          Github\r\n        </a>\r\n        <a\r\n          href='https://twitter.com/gongxq'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          Twitter\r\n        </a>\r\n        <a\r\n          href='https://weibo.com/2909438360'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          Weibo\r\n        </a>\r\n        <a\r\n          href='https://www.instagram.com/gongxq95'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          Instagram\r\n        </a>\r\n      </div>\r\n      <div className={styles.siteInfo}>\r\n        Copyright © 橡树上 2019\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n","module.exports = __webpack_public_path__ + \"static/favicon-9bf81a2b82f5028f3f4b92f88cb575ba.ico\";","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}