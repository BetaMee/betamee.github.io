{"version":3,"sources":["webpack:///./src/templates/TagTemplate.tsx","webpack:///./src/templates/styles/tag.module.scss"],"names":["TagTemplate","data","pathContext","className","styles","content","heading","tag","replace","allMarkdownRemark","edges","map","_edge","_mark","node","key","frontmatter","uninqueid","link","to","category","toLowerCase","title","module","exports"],"mappings":"2FAAA,6EA8BeA,UAtBkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OAC/C,kBAAC,IAAD,KACE,yBAAKC,UAAWC,IAAOC,SACrB,wBAAIF,UAAWC,IAAOE,SAAtB,SACSJ,EAAYK,IAAIC,QAAQ,MAAO,KAEvCP,EAAKQ,kBAAkBC,MAAMC,KAAI,SAACC,GACjC,IAAMC,EAAQD,EAAME,KACpB,OACE,yBAAKC,IAAKF,EAAMG,YAAYC,UAAWd,UAAWC,IAAOc,MACvD,kBAAC,IAAD,CACEC,GAAE,YAAcN,EAAMG,YAAYI,SAASC,cAAzC,IAA0DR,EAAMG,YAAYC,WAE7EJ,EAAMG,YAAYM,e,qBCpBjCC,EAAOC,QAAU,CAAC,QAAU,6BAA6B,QAAU,6BAA6B,KAAO","file":"component---src-templates-tag-template-tsx-43616f34eed72e460b75.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport styles from \"./styles/tag.module.scss\";\n\nimport { ITagTemplateProps } from \"../interfaces\";\n\nconst TagTemplate: React.FC<ITagTemplateProps> = ({ data, pathContext }) => (\n  <Layout>\n    <div className={styles.content}>\n      <h1 className={styles.heading}>\n        Tag: #{pathContext.tag.replace(/\\//g, \"\")}\n      </h1>\n      {data.allMarkdownRemark.edges.map((_edge) => {\n        const _mark = _edge.node;\n        return (\n          <div key={_mark.frontmatter.uninqueid} className={styles.link}>\n            <Link\n              to={`/content/${_mark.frontmatter.category.toLowerCase()}-${_mark.frontmatter.uninqueid}`}\n            >\n              {_mark.frontmatter.title}\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  </Layout>\n);\n\nexport default TagTemplate;\n\nexport const tagQuery = graphql`\n  query TagPageQuery($tag: String) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { regex: $tag } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"YYYY\")\n            title\n            tags\n            category\n            uninqueid\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"tag-module--content--1DHrR\",\"heading\":\"tag-module--heading--15Jbn\",\"link\":\"tag-module--link--3DsMn\"};"],"sourceRoot":""}